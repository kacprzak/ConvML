require 'nokogiri'

task :default => [:test]

task :test do
  File.open("test.log", "w") do |f|
	f.puts "Schema test: #{Time.now}"
  end
	
  # Test szablonu
  validate "../convml_11_template.xml"
  
  # Testuje poprawne dokumenty
  Rake::FileList.new("*.xml").exclude("*Fail.xml").each do |f|
	validate f
  end
  
  # Testuje dokumenty z b³êdami
  Rake::FileList.new("*Fail.xml").each do |f|
	validate f, false
  end
end

def validate(file, shouldBeValid=true)
	schema = "../convml_11.xsd"
	if Rake::Win32::windows?
		validateWithRuby schema, file, shouldBeValid
	else
		validateWithXmllint schema, file, shouldBeValid
	end
end

def validateWithXmllint(schema, file, shouldBeValid=true)
  sh "xmllint --noout --schema #{schema} #{file} 2> test.log" do |ok, res|
    if !ok && shouldBeValid
      sh "cat test.log"
    elsif ok && !shouldBeValid
      puts "WARNING: #{file} should not be vaild!"
    end
  end
end

def validateWithRuby(schema, file, shouldBeValid=true)
	puts "validating #{file}"
	xsd = Nokogiri::XML::Schema(File.read(schema))
	doc = Nokogiri::XML(File.read(file))
	
	errors = xsd.validate(doc)
	
	if errors.any? && shouldBeValid
		File.open("test.log", "a") do |f|
			errors.each do |e|
				puts e
				f.puts e
			end
		end
	elsif errors.empty? && !shouldBeValid
		puts "WARNING: #{file} should not be vaild!"
    end
end
